'use strict';

var _require = require('pg'),
    Client = _require.Client;

var connectionString = require('../keysAndIds/db.js');

var client = new Client({
  connectionString: connectionString,
  ssl: true
});

client.connect().then(function () {
  return console.log('Connected to postgresql database!');
}).catch(function (e) {
  return console.log('connection error: ', e);
});

// create tables for database
client.query('DROP TABLE smokers');
client.query('CREATE TABLE IF NOT EXISTS smokers(id serial not null primary key, name varchar(64), phone VARCHAR(64) UNIQUE, email VARCHAR(64) UNIQUE, timezone VARCHAR(64), progress int, reminder VARCHAR(64) )');

client.query('DROP TABLE friends');
client.query('CREATE TABLE IF NOT EXISTS friends(id serial not null primary key, name varchar(64), phone VARCHAR(64) UNIQUE, id_smokers int)');

client.query('DROP TABLE messages');
client.query('CREATE TABLE IF NOT EXISTS messages (id serial not null primary key, text varchar(64), timestamp varchar (25), id_smokers int, id_friends int)');

module.exports = {
  client: client,
  query: function query(text, params) {
    return client.query(text, params);
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2RhdGFiYXNlL2luZGV4LmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJDbGllbnQiLCJjb25uZWN0aW9uU3RyaW5nIiwiY2xpZW50Iiwic3NsIiwiY29ubmVjdCIsInRoZW4iLCJjb25zb2xlIiwibG9nIiwiY2F0Y2giLCJlIiwicXVlcnkiLCJtb2R1bGUiLCJleHBvcnRzIiwidGV4dCIsInBhcmFtcyJdLCJtYXBwaW5ncyI6Ijs7ZUFBbUJBLFFBQVEsSUFBUixDO0lBQVhDLE0sWUFBQUEsTTs7QUFDUixJQUFNQyxtQkFBbUJGLFFBQVEscUJBQVIsQ0FBekI7O0FBRUEsSUFBTUcsU0FBUyxJQUFJRixNQUFKLENBQVc7QUFDeEJDLG9DQUR3QjtBQUV4QkUsT0FBSztBQUZtQixDQUFYLENBQWY7O0FBS0FELE9BQU9FLE9BQVAsR0FDR0MsSUFESCxDQUNRO0FBQUEsU0FBTUMsUUFBUUMsR0FBUixDQUFZLG1DQUFaLENBQU47QUFBQSxDQURSLEVBRUdDLEtBRkgsQ0FFUztBQUFBLFNBQUtGLFFBQVFDLEdBQVIsQ0FBWSxvQkFBWixFQUFrQ0UsQ0FBbEMsQ0FBTDtBQUFBLENBRlQ7O0FBSUE7QUFDQVAsT0FBT1EsS0FBUCxDQUFhLG9CQUFiO0FBQ0FSLE9BQU9RLEtBQVAsQ0FBYSxxTUFBYjs7QUFFQVIsT0FBT1EsS0FBUCxDQUFhLG9CQUFiO0FBQ0FSLE9BQU9RLEtBQVAsQ0FBYSxnSUFBYjs7QUFFQVIsT0FBT1EsS0FBUCxDQUFhLHFCQUFiO0FBQ0FSLE9BQU9RLEtBQVAsQ0FBYSxnSkFBYjs7QUFFQUMsT0FBT0MsT0FBUCxHQUFpQjtBQUNmVixnQkFEZTtBQUVmUSxTQUFPLGVBQUNHLElBQUQsRUFBT0MsTUFBUDtBQUFBLFdBQ0xaLE9BQU9RLEtBQVAsQ0FBYUcsSUFBYixFQUFtQkMsTUFBbkIsQ0FESztBQUFBO0FBRlEsQ0FBakIiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IENsaWVudCB9ID0gcmVxdWlyZSgncGcnKTtcbmNvbnN0IGNvbm5lY3Rpb25TdHJpbmcgPSByZXF1aXJlKCcuLi9rZXlzQW5kSWRzL2RiLmpzJyk7XG5cbmNvbnN0IGNsaWVudCA9IG5ldyBDbGllbnQoe1xuICBjb25uZWN0aW9uU3RyaW5nLFxuICBzc2w6IHRydWUsXG59KTtcblxuY2xpZW50LmNvbm5lY3QoKVxuICAudGhlbigoKSA9PiBjb25zb2xlLmxvZygnQ29ubmVjdGVkIHRvIHBvc3RncmVzcWwgZGF0YWJhc2UhJykpXG4gIC5jYXRjaChlID0+IGNvbnNvbGUubG9nKCdjb25uZWN0aW9uIGVycm9yOiAnLCBlKSk7XG5cbi8vIGNyZWF0ZSB0YWJsZXMgZm9yIGRhdGFiYXNlXG5jbGllbnQucXVlcnkoJ0RST1AgVEFCTEUgc21va2VycycpO1xuY2xpZW50LnF1ZXJ5KCdDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBzbW9rZXJzKGlkIHNlcmlhbCBub3QgbnVsbCBwcmltYXJ5IGtleSwgbmFtZSB2YXJjaGFyKDY0KSwgcGhvbmUgVkFSQ0hBUig2NCkgVU5JUVVFLCBlbWFpbCBWQVJDSEFSKDY0KSBVTklRVUUsIHRpbWV6b25lIFZBUkNIQVIoNjQpLCBwcm9ncmVzcyBpbnQsIHJlbWluZGVyIFZBUkNIQVIoNjQpICknKTtcblxuY2xpZW50LnF1ZXJ5KCdEUk9QIFRBQkxFIGZyaWVuZHMnKTtcbmNsaWVudC5xdWVyeSgnQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgZnJpZW5kcyhpZCBzZXJpYWwgbm90IG51bGwgcHJpbWFyeSBrZXksIG5hbWUgdmFyY2hhcig2NCksIHBob25lIFZBUkNIQVIoNjQpIFVOSVFVRSwgaWRfc21va2VycyBpbnQpJyk7XG5cbmNsaWVudC5xdWVyeSgnRFJPUCBUQUJMRSBtZXNzYWdlcycpO1xuY2xpZW50LnF1ZXJ5KCdDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBtZXNzYWdlcyAoaWQgc2VyaWFsIG5vdCBudWxsIHByaW1hcnkga2V5LCB0ZXh0IHZhcmNoYXIoNjQpLCB0aW1lc3RhbXAgdmFyY2hhciAoMjUpLCBpZF9zbW9rZXJzIGludCwgaWRfZnJpZW5kcyBpbnQpJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBjbGllbnQsXG4gIHF1ZXJ5OiAodGV4dCwgcGFyYW1zKSA9PlxuICAgIGNsaWVudC5xdWVyeSh0ZXh0LCBwYXJhbXMpLFxufTtcbiJdfQ==